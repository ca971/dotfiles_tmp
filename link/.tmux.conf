#  _                                          ___  _____  _
# | |_  _ __ ___   _   _ __  __   ___  __ _  / _ \|___  |/ |
# | __|| '_ ` _ \ | | | |\ \/ /  / __|/ _` || (_) |  / / | |
# | |_ | | | | | || |_| | >  <  | (__| (_| | \__, | / /  | |
#  \__||_| |_| |_| \__,_|/_/\_\  \___|\__,_|   /_/ /_/   |_|
#
# Config for Tmux (c) ca971

# Before
# =============================================================================
# (‚Äë‚óè‚Äë‚óè) > iTerm2 is configured to let option key act as +Esc
# Inspired by : https://github.com/fatih/dotfiles/blob/master/tmuxconf
#               https://github.com/bruno-/dotfiles/blob/master/.tmux.conf

# General settings
# =============================================================================
set -g default-terminal "alacritty" # Add true colors & italics support with alacritty (256 colors {n}vim compability)
set -sg escape-time 0 # Decrease command delay (increase vim responsiveness)
set -g history-limit 50000000 # Have a very large history to get lot of scrollbacks
set -g terminal-overrides 'xterm*:smcup@:rmcup@' # Tell Tmux that outside terminal supports true colors
set -g aggressive-resize on # Don't rezise my screen to an incredibly small window
set -sg repeat-time 600 # increase repeat timeout
set -g display-panes-time 4000 # 4 seconds fot displaying pane number
set -g display-time 1000 # Tmux messages are displayed for 4 seconds
set -s focus-events on
set -g default-command "reattach-to-user-namespace -l $SHELL"
setw -g word-separators ' @"=()[]_-:,.' # Word separators for automatic word selection
setw -ag word-separators "'"
setw -g xterm-keys on
setw -g automatic-rename on   # rename window to reflect current program
set -g renumber-windows on    # renumber windows when a window is closed

# Change prefix key to C-a, easier to type
# Remap prefix from 'C-b' to 'C-a'
unbind C-b # Remove bind for C-b
set -g prefix C-a
bind-key C-a send-prefix # Send C-a to the local applicationx

# Set parent terminal title to reflect current window in tmux session
set -g set-titles on # set terminal title
set -g set-titles-string "#(echo #{session_name}|tr '[:lower:]' '[:upper:]') [#{session_id}] :: \
#{window_name} [#{window_index}/#{session_windows}] :: \
#{pane_index} >$ #{pane_current_path}"

# Start index of window/pane with 1, because we're humans, not computers
set -g base-index 1 # Start window numbering at 1 instead of 0
setw -g pane-base-index 1 # Start pane numbering at 1 instead of 0

# Enable mouse support
set -g mouse on

# Key bindings
# =============================================================================
# https://gist.github.com/zchee/37b4795f735ed78600c9

# Edit configuration and reload settings
#unbind e
bind-key e \
        new-window -n ".tmux.conf" \
        "sh -c '\${EDITOR:-nvim} ~/.tmux.conf && \
        tmux source ~/.tmux.conf && \
        tmux display \"~/.tmux.conf sourced\"'"

# Prefix + h to clear screen and history buffer
#bind-key h \
#        send-keys "C-c; clear && tmux clear-history" \;\
#        send-keys "Enter" \;\
#        display 'Screen cleared !'

#unbind l
bind-key l \
        new-window -n ".tmux.conf.local" \
        "sh -c '\${EDITOR:-nvim} ~/.tmux.conf.local && \
        tmux source ~/.tmux.conf && \
        tmux display \"~/.tmux.conf sourced\"'"

# Quickly reload tmux settings
#unbind r
bind-key r \
        source-file ~/.tmux.conf \;\
        display '~/.tmux.conf sourced !'

# clear both screen and history
# bind-key -n C-l send-keys C-l \; run 'sleep 0.1' \; clear-history
bind-key C-l send-keys 'C-l' # Clear the screen

# Hide status bar on demand
bind-key C-b if -F '#{s/off//:status}' 'set status off' 'set status on'

# displays
bind-key * list-clients


# Session settings
# =============================================================================
# Rename current session
#bind-key $ command-prompt #S "rename-session '%%'"
bind-key $ command-prompt -p "Rename session:#S" "rename-session '%%'"


# Window settings
# =============================================================================
# window navigation
bind-key -n S-Left previous-window
bind-key -n S-Right next-window

# Find a window
bind-key f command-prompt "find-window '%%'"

# Rename window
bind-key , command-prompt -p "Rename window:#W" "rename-window '%%'"

# Move window
bind-key . command-prompt "move-window -t '%%'"

# Swap window
bind-key -r "<" swap-window -d -t -1
bind-key -r ">" swap-window -d -t +1

# Kill window whithout confirm
#bind & kill-window
bind-key & confirm-before -p "kill-window #W? (y/n)" kill-window

bind-key m setw monitor-activity \; display-message 'Monitor window activity [#{?monitor-activity,ON,OFF}]'
bind-key M if -F '#{monitor-silence}' \
    'setw monitor-silence 0 ; display-message "Monitor window silence [OFF]"' \
    'command-prompt -p "Monitor silence: interval (s)" "setw monitor-silence %%"'

# Activity bell and whistles
set -g visual-activity on


# Pane settings
# =============================================================================
# Splits

# Split horizontally
# -----------------------
bind-key - split-window -v -c "#{pane_current_path}"

# Split horizontally (100 lines)
unbind v
bind-key v split-window -h -l 100 -c '#{pane_current_path}'

# Split current pane full width horizontally
bind-key \ split-window -fh -c "#{pane_current_path}"

# Split vertically
# -----------------------
bind-key | split-window -h -c "#{pane_current_path}"

# Split vertically (30 columns)
unbind h
bind-key h split-window -v -l 30 -c '#{pane_current_path}'

# Split current pane full width vertically
bind-key _ split-window -fv -c "#{pane_current_path}"

# Resize panes
bind-key J resize-pane -D 5
bind-key K resize-pane -U 5
bind-key H resize-pane -L 5
bind-key L resize-pane -R 5

# Switch betewen panes using alt + arrow
bind-key -n M-Left select-pane -L
bind-key -n M-Right select-pane -R
bind-key -n M-Up select-pane -U
bind-key -n M-Down select-pane -D

# Switch betewen panes (jhl)
# NOTE(arslan): See to prevent cycling https://github.com/tmux/tmux/issues/1158
bind-key j select-pane -D
bind-key k select-pane -U
bind-key h select-pane -L
bind-key l select-pane -R

# maximize current pane
bind-key ^z select-pane -t :.+ \; resize-pane -Z # Switch pane and zoom

# Switch to panes
unbind ^A
bind-key ^A select-pane -t :.+ # quick pane cycling

# Break panes
bind-key ! break-pane

# Sync panes (send input to all panes in the window)
bind-key C-s if -F '#{pane_synchronized}' \
  'setw synchronize-panes off; \
  setw pane-active-border-style fg=$color_salt_water_taffy,nobold,bg=$color_dark_gravel; \
  setw pane-border-format " #{pane_id}::#{pane_current_path} "' \
  'setw synchronize-panes on; \
  setw pane-active-border-style fg=$color_red,bg=$color_dark_gravel; \
  setw pane-border-format " #{pane_id}::#{pane_current_path} - Pane Synchronization ON "'

# Kill pane whithout confirm
bind-key x kill-pane


# Copy mode, scroll and clipboard
# =============================================================================
bind-key b list-buffers  # list paste buffers
bind-key p paste-buffer  # paste from the top paste buffer
bind-key P choose-buffer # choose which buffer to paste from


# Vim
# =============================================================================
set -g mode-keys vi # Use vim keybindings in copy mode
set -g status-keys emacs # Vi keys, even for vim users
set -g focus-events on # Focus events enabled for terminals that support them


# Themes
# =============================================================================
# Black
color_coal="colour16"
color_blackest_gravel="colour232"
color_dark_gravel="colour236"
color_deep_gravel="colour237"
color_medium_gravel="colour238"
color_light_gravel="colour240"

# Yellow
color_yellow="colour220"
color_toffee="colour137"
color_lime="colour154"
color_orange="colour202"
color_dalespale="colour221"
color_dirty_blonde="colour222"
color_coffee="colour173"

# Blue
color_facebook="colour27"
color_tardis="colour39"

# Red
color_red="colour124"
color_fuschia="colour162"

# Green
color_salt_water_taffy="colour121"
color_green="$color_salt_water_taffy"
color_dark_green="colour028"

# White
color_white="colour253"
color_light="colour244"

# Window list color
color_window_list="$color_dark_gravel"


# Appearence and status bar
# =============================================================================
# Window
# -------------------------
# Default statusbar color
set -g status-style "fg=$color_white,bg=$color_window_list"

# Window segments in status line
setw -g window-status-separator ""

# Active window title colors
setw -g window-status-current-style "fg=$color_red,bg=$color_medium_gravel"

# Default window with an activity alert
setw -g window-status-activity-style "fg=$color_white,bg=$color_red"

# Default window format
setw -g window-status-format "\
#[fg=$color_light,bg=$color_window_list] \
#{window_name}[#{window_index}/#{session_windows}]::#{pane_index}#{?window_bell_flag, üîî,}#{?window_zoomed_flag, üîç,}"

# Active window format
setw -g window-status-current-format "\
#{?window_activity_flag,#[fg=$color_orange]#[blink],#[fg=$color_window_list]}\
#{?pane_synchronized,#[bg=$color_red],#[bg=$color_medium_gravel]}\uE0B4 \
#[fg=$color_salt_water_taffy,bold]\
#{?pane_synchronized,#[bg=$color_red],#[bg=$color_medium_gravel]}\
#{window_name}[#{window_index}/#{session_windows}]::#{pane_index}\
#{?window_bell_flag, üîî,}#{?window_zoomed_flag, üîç,}#{?pane_synchronized,\u0016,}\#[bg=$color_window_list]\
#{?pane_synchronized,#[fg=$color_red],#[fg=$color_medium_gravel]}\uE0B4"

# Status bar
set -g status "on"
set -g status-interval 10       # Refresh status line every 10 seconds
set -g status-position bottom
#set -g status-justify left
set -g status-left-length "100" # Length of tmux status line
set -g status-right-length "90"

# Clock
set-window-option -g clock-mode-style 24 # 24 hour clock
set-window-option -g clock-mode-colour $color_medium_gravel

# Bell
set-window-option -g window-status-bell-style bg=$color_red,fg=$color_dark_gravel

# Pane
# -------------------------
# Inactive pane border color
set -g pane-border-style "fg=$color_medium_gravel,bg=default"

# Active pane border color
set -g pane-active-border-style "fg=$color_salt_water_taffy,nobold,bg=$color_dark_gravel"

# Format pane border
set -g pane-border-status bottom
set -g pane-border-format '#(sh ~/.dotfiles/pane-border-format.sh \
  --pane-current-path=#{pane_current_path} \
  --pane-active=#{pane_active})'

# Pane number display
set-option -g display-panes-active-colour $color_salt_water_taffy #fg2
set-option -g display-panes-colour $color_deep_gravel #bg1

# Environment
# =============================================================================
##[fg=$color_white,nobold]#(curl -s wttr.in/Paris:Melun:Guadeloupe:Guyane?format="%%l:+%%c%%20%%t%%60%%w&period=60") \

# Statusbar style (left-right)
# -----------------------------------------------------------------------------
set -g status-left "\
#[fg=$color_dark_gravel,bg=$color_red]#{?window_bell_flag, üîî,}#{?window_zoomed_flag, üîç,}\
#[fg=$color_red,bg=$color_orange]\uE0B4\
#[fg=$color_dark_gravel,bg=$color_orange,bold] #{session_id}\
#[fg=$color_dark_gravel,bg=$color_orange,bold][#(echo #{session_name}|tr '[:lower:]' '[:upper:]')] \
#[fg=$color_orange,bg=$color_lime]\uE0B4 \
#[fg=$color_dark_gravel,nobold][#{window_index}/#{session_windows}] #{?client_prefix,#[fg=$color_red]‚óè‚óè,}\
#[fg=$color_lime,bg=$color_facebook]\uE0B4 \
#[fg=$color_white,nobold]#(curl -s wttr.in/Paris:Melun:Guadeloupe:Guyane?format="%%l:+%%c%%20%%t%%60%%w&period=60") \
#[fg=$color_facebook,bg=$color_medium_gravel]\uE0B4 \
#[fg=$color_dirty_blonde,bg=$color_medium_gravel]%A %d/%m/%Y * %H:%M \
#[fg=$color_medium_gravel]#[bg=$color_window_list]\uE0B4"
#[fg=$color_dark_gravel]#{?username_ssh,#[bg=$color_blackest_gravel]\uE0B4 \,}\
#{?username_ssh,#[fg=$color_red,bold]#([[ -n '$SSH_CLIENT' ]] && echo ' $SSH_CLIENT '),}\
#{?username_ssh,#[fg=$color_blackest_gravel],}#[bg=$color_window_list]\uE0B4 "

set -g status-right "\
#[fg=$color_medium_gravel,bg=$color_window_list]\uE0B6\
#[fg=$color_white,bold,bg=$color_medium_gravel]#([[ -n '$SSH_CLIENT' ]] && echo ' $SSH_CLIENT ') \
#[fg=$color_dark_gravel,nobold,bg=$color_medium_gravel]\uE0B6\
#[fg=$color_dirty_blonde,bg=$color_dark_gravel] Online: #{online_status}\
#[fg=$color_facebook,bg=$color_dark_gravel]\uE0B6\
#[fg=$color_white,bg=$color_facebook] #{pane_id} \
#[fg=$color_lime,bg=$color_facebook]\uE0B6\
#[bg=$color_lime]#[fg=$color_dark_green] #(whoami)#[bg=$color_lime,fg=$color_medium_gravel]@#[fg=$color_blackest_gravel,bg=$color_lime]#{host_short} \
#(uptime | cut -d ' ' -f7 | cut -d ',' -f1) #{battery_icon} #{battery_percentage} \
#[fg=$color_orange,bg=$color_lime]\uE0B6\
#[fg=$color_dark_gravel,bg=$color_orange] #{sysstat_cpu}\
#[fg=$color_red,bg=$color_orange] \uE0B6"

# Plugins config
# =============================================================================
# https://github.com/tmux-plugins
# Resurrect (save & restore sessions)
set -g @resurrect-dir '~/.local/share/tmux/resurrect'
set -g @resurrect-save 'S'
set -g @resurrect-restore 'R'
set -g @resurrect-strategy-vim 'session'  # for vim
set -g @resurrect-strategy-nvim 'session' # for neovim
#set -g @resurrect-capture-pane-contents 'on'

# Continuum (backup and auto start session)
set -g @continuum-restore 'on' # Automatic restore turned on
set -g @continuum-boot 'on' # Automatically started after the computer/server is turned on
set -g @continuum-boot-options 'alacritty,fullscreen' # Next time the computer is started (OSx : iterm)
set -g @continuum-save-interval '15' # Interval for automatic save in mn

# Sysstat (CPU & MEM)
# Configure view templates for tmux-plugin-sysstat "MEM" and "CPU" widget
set -g @sysstat_mem_view_tmpl 'MEM:#[fg=#{mem.color}]#{mem.pused}#[default] #{mem.used}'

# Configure colors for tmux-plugin-sysstat "MEM" and "CPU" widget
set -g @sysstat_cpu_color_low "$color_green"
set -g @sysstat_cpu_color_medium "$color_yellow"
set -g @sysstat_cpu_color_stress "$color_red"

set -g @sysstat_mem_color_low "$color_green"
set -g @sysstat_mem_color_medium "$color_yellow"
set -g @sysstat_mem_color_stress "$color_red"

set -g @sysstat_swap_color_low "$color_green"
set -g @sysstat_swap_color_medium "$color_yellow"
set -g @sysstat_swap_color_stress "$color_red"

# Battery (status)
set -g @batt_remain_short: 'true'
set -g @batt_color_full_charge "#[fg=$color_green]"
set -g @batt_color_high_charge "#[fg=$color_green]"
set -g @batt_color_medium_charge "#[fg=$color_yellow]"
set -g @batt_color_low_charge "#[fg=$color_red]"

# Online status
set -g @online_icon "‚úÖ "
set -g @offline_icon "‚õîÔ∏è"

# Sidebar
set -g @sidebar-tree 't'
set -g @sidebar-tree-focus 'T'
set -g @sidebar-tree-command 'tree -C'

set -g @open-S 'https://www.google.com/search?q='


# Plugins list
# =============================================================================
# tmux plugin manager: github.com/tmux-plugins/tpm
set -g @plugin 'tmux-plugins/tpm' # Tmux plugins manager
set -g @plugin 'tmux-plugins/tmux-battery' # Displaying battery percentage and status icon
set -g @plugin 'tmux-plugins/tmux-sessionist' # Utilities for manipulating tmux sessions
set -g @plugin 'samoshkin/tmux-plugin-sysstat' # Print CPU usage, memory & swap, load average
set -g @plugin 'tmux-plugins/tmux-prefix-highlight' # Highlights when you press tmux prefix key
set -g @plugin 'tmux-plugins/tmux-online-status' # Displaying online status for your workstation
set -g @plugin 'tmux-plugins/tmux-copycat' # Regex and predefined searches, result highlighting
set -g @plugin 'tmux-plugins/tmux-yank' # Copy to the system clipboard in tmux
set -g @plugin 'tmux-plugins/tmux-open' # Opening highlighted selection directly from Tmux copy mode
set -g @plugin 'tmux-plugins/tmux-resurrect' # Restore tmux environment after system restart
set -g @plugin 'tmux-plugins/tmux-continuum' # Continuously saving tmux environment, automatic tmux start when computer/server is turned on, automatic restore when tmux is started
set -g @plugin 'tmux-plugins/tmux-sidebar' # It opens a tree directory listing for the current path

# Auto-install Tmux plugins manager
set-environment -g TMUX_PLUGIN_MANAGER_PATH '/Users/ca/.local/share/tmux/plugins'

if "test ! -d ~/.local/share/tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.local/share/tmux/plugins/tpm && ~/.local/share/tmux/plugins/tpm/bin/install_plugins'"

# Local
# =============================================================================
# User defined overrides
if '[ -f ~/.tmux.conf.local ]' 'source ~/.tmux.conf.local'

# Run all plugins scripts
run -b '~/.local/share/tmux/plugins/tpm/tpm'

# Help
# =============================================================================

# General
# -----------------------------------------------------------------------------
# Prefix                C-a
# C-a   e               Edit .tmux.conf
# C-a   r               Source .tmux.conf
# C-a   ?               Show key bindings
# C-a   t               Show time
# C-a   :               Prompt
# C-a   d               Detach


# Session
# -----------------------------------------------------------------------------
# C-a   s               List sessions
# C-a   $               Rename session
# C-a   C               Create new session
# C-a   X               Kill current session whithout detaching Tmux
# C-a   S               Switch to the last session


# Windows
# -----------------------------------------------------------------------------
# C-a   c               Create new window
# C-a   w               List windows
# C-a   f               Find window
# C-a   ,               Rename window
# C-a   &               Kill window
# C-a   n               Move to Next window
# C-a   p               Move to Previous window
# C-a   0-9             Move to [0-9] window number
# C-a   .               Move window - prompted for a new number
# C-a   <               Moves current window one position to the left
# C-a   >               Moves current window one position to the right


# Panes
# -----------------------------------------------------------------------------
# C-a   -               Horizontal split
# C-a   |               Vertical split
# C-a   \               Split current pane full width horizontally
# C-a   _               Split current pane full width vertically
# C-a   o               Jump between panes
# C-a   q               Show panes numbers (type number to jump)
# C-a   x               Kill pane
# C-a   !               Break marked pane out into a window
# C-a   @               Promote current pane into a new session
# C-a   j               Create pane from an existing window
# C-a   ‚çΩ               Space - toggle between layouts
# C-a   ‚Üê/‚Üí             Move focus to left/right pane
# C-a   ‚Üë/‚Üì             Move focus to upper/lower pane



# Plugins
# -----------------------------------------------------------------------------

#  Plugin : tmux-sessionist
#  =-=-=-=-=-=-=-=-=-=-=-=-=

#  Plugin: tmux-pain-control
#  =-=-=-=-=-=-=-=-=-=-=-=-=

#  Navigation
#  -----------------------
#  prefix + h and prefix + C-h
#  select pane on the left
#  prefix + j and prefix + C-j
#  select pane below the current one
#  prefix + k and prefix + C-k
#  select pane above
#  prefix + l and prefix + C-l
#  select pane on the right
#
#  Resizing panes
#  -----------------------
#  prefix + shift + h
#  resize current pane 5 cells to the left
#  prefix + shift + j
#  resize 5 cells in the down direction
#  prefix + shift + k
#  resize 5 cells in the up direction
#  prefix + shift + l
#  resize 5 cells to the right
#  These mappings are repeatable
#

# Window/Pane surgery
# -----------------------------------------------------------------------------
#  :joinp -s :2<CR>     move window 2 into a new pane in the current window
#  :joinp -t :1<CR>     move the current pane into a new pane in window 1


#  Plugin: tmux-copycat
#  =-=-=-=-=-=-=-=-=-=-=-=-=
#  Search
#  -----------------------
#  prefix + / - regex search (strings work too)
#  foo - searches for string foo
#  [0-9]+ - regex search for numbers
#  Grep is used for searching (case insensitive).
#
#  Predefined searches
#  -----------------------
#  prefix + ctrl-f - simple file search
#  prefix + ctrl-g - jumping over git status files (best used after git status command)
#  prefix + alt-h - jumping over SHA-1/SHA-256 hashes (best used after git log command)
#  prefix + ctrl-u - url search (http, ftp and git urls)
#  prefix + ctrl-d - number search (mnemonic d, as digit)
#  prefix + alt-i - ip address search
#  These start "copycat mode" and jump to first match.
#
#  "Copycat mode" bindings
#  -----------------------
#  These are enabled when you search with copycat:
#  n - jumps to the next match
#  N - jumps to the previous match
#  To copy a highlighted match: Enter - if you're using Tmux vi mode

#  Plugin: tmux-yank
#  =-=-=-=-=-=-=-=-=-=-=-=-=
#  Normal mode
#  -----------------------
#  prefix‚Äìy ‚Äî copies text from the command line to the clipboard
#  prefix‚ÄìY ‚Äî copy the current pane's current working directory to the clipboard.
#
#  Copy mode
#  -----------------------
#  y ‚Äî copy selection to system clipboard.
#  Y (shift-y) ‚Äî "put" selection. Equivalent to copying a selection, and pasting it to the command line.


#  Plugin: tmux-open
#  =-=-=-=-=-=-=-=-=-=-=-=-=
#  In tmux copy mode:
#  -----------------------
#  o - "open" a highlighted selection with the system default program. open for OS X or xdg-open for Linux.
#  Ctrl-o - open a highlighted selection with the $EDITOR
#  Shift-s - search the highlighted selection directly inside a search engine (defaults to google).
#
#  In copy mode:
#  -----------------------
#  highlight file.pdf and press o - file will open in the default PDF viewer.
#  highlight file.doc and press o - file will open in system default .doc file viewer.
#  highlight http://example.com and press o - link will be opened in the default browser.
#  highlight file.txt and press Ctrl-o - file will open in $EDITOR.
#  highlight TypeError: 'undefined' is not a function and press Shift-s - the text snipped will be searched directly inside google by default


#  Plugin: tmux-sidebar
#  =-=-=-=-=-=-=-=-=-=-=-=-=
#  Key bindings
#  -----------------------
#  prefix + Tab - toggle sidebar with a directory tree
#  prefix + Backspace - toggle sidebar and move cursor to it (focus it)

#  fast
#  -----------------------
#  Much faster than doing each step manually.

#  smart sizing
#  -----------------------
#  Sidebar remembers its size, so the next time you open it, it will have the exact same width. This is a per-directory property, so you can have just the right size for multiple dirs.

#  toggling
#  -----------------------
#  The same key binding opens and closes the sidebar.

#  uninterrupted workflow
#  -----------------------
#  The main prefix + Tab key binding opens a sidebar but does not move cursor to it.

#  pane layout stays the same
#  -----------------------
#  No matter which pane layout you prefer, sidebar tries hard not to mess your pane splits. Open, then close the sidebar and everything should look the same.

# Useful commands
# -----------------------------------------------------------------------------
#  To start a detached session and named window : tmux new -d -s my-session -n my-window
#  To start a detached command :                  tmux new -d -s my-session 'command1; command2;'
#  To kill all sessions and windows :             C-a k





################## iTerm + Tmux Integration #####################

################ Alacritty + Tmux Integration ###################

# Emulate Tmux to behave exactly the same as it would be in iTerm2 with the shortcuts
# ===================================================================================
# https://arslan.io/2018/02/05/gpu-accelerated-terminal-alacritty/
# https://github.com/fatih/dotfiles/blob/main/tmuxconf
# https://twitter.com/fatih/status/956248969503498240?lang=fr
# https://github.com/alacritty/alacritty/blob/master/alacritty.yml

# ‚ûú xxd -psd
# ^Av                   --> C-A v
# 01760a^C              --> Sequences C-A v

# In "alacritty.yml" file add hex code for shortcut "C-A v"
# - { key: D,  mods:Command,     chars:  "\x01\x76" }

# ‚ûú xxd -c1
# ^A^[[A                --> C-A Up
# 00000000: 01  .       --> C-A
# 00000001: 1b  .       --> Sequence Up
# 00000002: 5b  [       --> Sequence Up
# 00000003: 41  A       --> Sequence Up
# 00000004: 0a  .       --> Return
# ^C                    --> C-C

# In "alacritty.yml" file add hex code for shortcut "C-A Up"
# - { key: Up,  mods:Command|Shift,     chars:  "\x01\x1b\x5b\41" }

################################################################




#vim: set ft=tmux:
